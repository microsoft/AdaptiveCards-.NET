<!-- Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT License. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid" 
                    xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys">

    <SolidColorBrush x:Key="Adaptive.Action.Positive.Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Adaptive.Action.Positive.Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Adaptive.Action.Positive.Button.MouseOver.Background" Color="#FFBEE6FD"/>
    <SolidColorBrush x:Key="Adaptive.Action.Positive.Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Adaptive.Action.Positive.Button.Foreground" Color="#FFFFFFFF"/>

    <SolidColorBrush x:Key="Adaptive.Action.Destructive.Button.Static.Background" Color="#FFDDDDDD"/>
    <SolidColorBrush x:Key="Adaptive.Action.Destructive.Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Adaptive.Action.Destructive.Button.Foreground" Color="#FF838383"/>
    <SolidColorBrush x:Key="Adaptive.Action.Destructive.Button.MouseOver.Foreground" Color="#FF838383"/>

    <Style x:Key="Adaptive.Input.Text.InlineAction.Button" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#FFFFFFFF"/>
        <Setter Property="BorderBrush" Value="#FFFFFFFF"/>
    </Style>

    <Style x:Key="PositiveActionDefaultStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource Adaptive.Action.Positive.Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Adaptive.Action.Positive.Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Adaptive.Action.Positive.Button.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Adaptive.Action.Positive.Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Adaptive.Action.Positive.Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Adaptive.Action.Positive.Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Adaptive.Action.Positive.Button.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource Adaptive.Action.Positive.Button.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Adaptive.Action.Positive.Button.MouseOver.Border}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Adaptive.Action.Positive.Button.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DestructiveActionDefaultStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{StaticResource Adaptive.Action.Destructive.Button.Static.Background}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Adaptive.Action.Destructive.Button.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource Adaptive.Action.Destructive.Button.Foreground}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" TextElement.Foreground="{DynamicResource Adaptive.Action.Destructive.Button.Foreground}"  Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource Adaptive.Action.Destructive.Button.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource Adaptive.Action.Destructive.Button.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource Adaptive.Action.Destructive.Button.MouseOver.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
